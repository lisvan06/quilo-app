// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String    @unique
  email         String?   @unique
  password      String
  emailVerified DateTime? @map("email_verified")
  image         String?
  enterprise    String?
  role          String    @default("USER")
  products      Product[]
  address       String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  stock       Int
  price       Float
  published   Boolean @default(false)
  owner       User?   @relation(fields: [ownerId], references: [id])
  ownerId     String? @db.ObjectId
  deleted     Boolean  @default(false)

  @@map("products")
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  @@map("categories")
}

enum Role {
  USER
  ADMIN
}

// type Address {
//   street String
//   city   String
//   state  String
//   zip    String
// }
